{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JohnP\\\\myfirstreact\\\\src\\\\App.js\";\nimport React, { Component, Fragment, useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\n\nconst App = () => {\n  const [drugs, setDrugs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getDrugData = async () => {\n    try {\n      const data = await axios.get(\"https://drugtargetcommons.fimm.fi/api/data/bioactivity/?format=json\");\n      console.log(data);\n      setDrugs(data.data.bioactivities);\n      setLoading(true);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const columns = [{\n    dataField: \"chembl_id\",\n    text: \"Chembl ID\",\n    sort: true,\n    filter: textFilter()\n  }, {\n    dataField: \"activity_comment\",\n    text: \"Activity Comment\",\n    sort: true\n  }, {\n    dataField: \"annotated\",\n    text: \"Annotated\",\n    sort: true\n  }, {\n    dataField: \"annotation_comments\",\n    text: \"Annotation Comments\",\n    sort: true\n  }, {\n    dataField: \"assay_cell_type\",\n    text: \"Assay Cell Type\",\n    sort: true\n  }, {\n    dataField: \"assay_format\",\n    text: \"Assay Format\",\n    sort: true\n  }, {\n    dataField: \"assay_sub_type\",\n    text: \"Assay Sub-Type\",\n    sort: true\n  }, {\n    dataField: \"assay_type\",\n    text: \"Assay Type\",\n    sort: true\n  }, {\n    dataField: \"authors\",\n    text: \"Authors\",\n    sort: true\n  }, {\n    dataField: \"compound_concentration_value\",\n    text: \"Compount Concetration Value\",\n    sort: true\n  }, {\n    dataField: \"compound_concentration_value_unit\",\n    text: \"Compount Concetration Value Unit\",\n    sort: true\n  }, {\n    dataField: \"compound_name\",\n    text: \"Compound Name\",\n    sort: true\n  }, {\n    dataField: \"detection_technology\",\n    text: \"Detection Technology\",\n    sort: true\n  }, {\n    dataField: \"endpoint_actionmode\",\n    text: \"Endpoint Actionmode\",\n    sort: true\n  }, {\n    dataField: \"endpoint_standard_relation\",\n    text: \"Endpoint Standard Relation\",\n    sort: true\n  }];\n\n  const customTotal = (from, to, size) => /*#__PURE__*/React.createElement(\"span\", {\n    className: \"react-bootstrap-table-pagination-total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, \"Showing \", from, \" to \", to, \" of \", size, \" Results\");\n\n  const options = {\n    showTotal: true,\n    paginationTotalRenderer: customTotal\n  };\n  useEffect(() => {\n    getDrugData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }\n  }, loading ? /*#__PURE__*/React.createElement(BootstrapTable, {\n    keyField: \"activity_comment\",\n    data: drugs,\n    columns: columns,\n    pagination: paginationFactory(options),\n    filter: filterFactory(),\n    responsive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }) : /*#__PURE__*/React.createElement(ReactBootStrap.Spinner, {\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default App;\n/*export default class App extends React.Component {\n\t\n\tstate = {\n\t\tloading: true,\n\t\tdrug: null\n\t};\n\t\n\tasync componentDidMount() {\n\t\tconst url = \"https://drugtargetcommons.fimm.fi/api/data/bioactivity/?format=json\";\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\tthis.setState({ drug: data.bioactivities[0], loading: false });\n\t\t//console.log(data.bioactivities[0]);\n\t}\n\t\n\trender(){\n\t\tif (this.state.loading) {\n\t\t\treturn <div>loading...</div>; \n\t\t}\n\t\t\n\t\tif (!this.state.drug) {\n\t\t\treturn <div>didnt get a drug</div>;\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div>\n\t\t\t\t\t<div>{this.state.drug.activity_comment}</div>\n\t\t\t\t\t<div>{this.state.drug.annotated}</div>\n\t\t\t\t\t<div>{this.state.drug.annotation_comments}</div>\n\t\t\t\t\t<div>{this.state.drug.assay_cell_type}</div>\n\t\t\t\t\t<div>{this.state.drug.assay_format}</div>\n\t\t\t\t\t<div>{this.state.drug.assay_sub_type}</div>\n\t\t\t\t\t<div>{this.state.drug.assay_type}</div>\n\t\t\t\t\t<div>{this.state.drug.authors}</div>\n\t\t\t\t\t<div>{this.state.drug.chembl_id}</div>\n\t\t\t\t\t<div>{this.state.drug.compound_concentration_value}</div>\n\t\t\t\t\t<div>{this.state.drug.compound_concentration_value_unit}</div>\n\t\t\t\t\t<div>{this.state.drug.compound_name}</div>\n\t\t\t\t\t<div>{this.state.drug.detection_technology}</div>\n\t\t\t\t\t<div>{this.state.drug.endpoint_actionmode}</div>\n\t\t\t\t\t<div>{this.state.drug.endpoint_standard_relation}</div>\n\t\t\t\t\t<div>{this.state.drug.endpoint_standard_type}</div>\n\t\t\t\t\t<div>{this.state.drug.endpoint_standard_units}</div>\n\t\t\t\t\t<div>{this.state.drug.endpoint_standard_value}</div>\n\t\t\t\t\t<div>{this.state.drug.gene_name}</div>\n\t\t\t\t\t<div>{this.state.drug.inhibitor_type}</div>\n\t\t\t\t\t<div>{this.state.drug.max_phase}</div>\n\t\t\t\t\t<div>{this.state.drug.mutation_info}</div>\n\t\t\t\t\t<div>{this.state.drug.protein_class}</div>\n\t\t\t\t\t<div>{this.state.drug.pubmed_id}</div>\n\t\t\t\t\t<div>{this.state.drug.resource_uri}</div>\n\t\t\t\t\t<div>{this.state.drug.target_organism}</div>\n\t\t\t\t\t<div>{this.state.drug.target_pref_name}</div>\n\t\t\t\t\t<div>{this.state.drug.uniprot_id}</div>\n\t\t\t\t\t<div>{this.state.drug.wildtype_or_mutant}</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<table class=\"table table-striped table-responsive\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t  <th scope=\"col\">#</th>\n\t\t\t\t\t\t  <th scope=\"col\">Activity Comment</th>\n\t\t\t\t\t\t  <th scope=\"col\">Annotated</th>\n\t\t\t\t\t\t  <th scope=\"col\">Annotation Comments</th>\n\t\t\t\t\t\t  <th scope=\"col\">Assay Cell Type</th>\n\t\t\t\t\t\t  <th scope=\"col\">Assay Format</th>\n\t\t\t\t\t\t  <th scope=\"col\">Assay Sub-Type</th>\n\t\t\t\t\t\t  <th scope=\"col\">Assay Type</th>\n\t\t\t\t\t\t  <th scope=\"col\">Authors</th>\n\t\t\t\t\t\t  <th scope=\"col\">Chembl ID</th>\n\t\t\t\t\t\t  <th scope=\"col\">Compount Concetration Value</th>\n\t\t\t\t\t\t  <th scope=\"col\">Compount Concetration Value Unit</th>\n\t\t\t\t\t\t  <th scope=\"col\">Compound Name</th>\n\t\t\t\t\t\t  <th scope=\"col\">Detection Technology</th>\n\t\t\t\t\t\t  <th scope=\"col\">Endpoint Actionmode</th>\n\t\t\t\t\t\t  <th scope=\"col\">Endpoint Standard Relation</th>\n\t\t\t\t\t\t  <th scope=\"col\">Endpoint Standard Type</th>\n\t\t\t\t\t\t  <th scope=\"col\">Endpoint Standard Units</th>\n\t\t\t\t\t\t  <th scope=\"col\">Endpoint Standard Value</th>\n\t\t\t\t\t\t  <th scope=\"col\">Gene Name</th>\n\t\t\t\t\t\t  <th scope=\"col\">Inhibitor Type</th>\n\t\t\t\t\t\t  <th scope=\"col\">Max Phase</th>\n\t\t\t\t\t\t  <th scope=\"col\">Mutation Info</th>\n\t\t\t\t\t\t  <th scope=\"col\">Protein Class</th>\n\t\t\t\t\t\t  <th scope=\"col\">Pubmed ID</th>\n\t\t\t\t\t\t  <th scope=\"col\">Recource URI</th>\n\t\t\t\t\t\t  <th scope=\"col\">Target Organism</th>\n\t\t\t\t\t\t  <th scope=\"col\">Target Pref Name</th>\n\t\t\t\t\t\t  <th scope=\"col\">Uniprot ID</th>\n\t\t\t\t\t\t  <th scope=\"col\">Wildtype or Mutant</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t  <th scope=\"row\">1</th>\n\t\t\t\t\t\t  <td>Mark</td>\n\t\t\t\t\t\t  <td>Otto</td>\n\t\t\t\t\t\t  <td>@mdo</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t  <th scope=\"row\">2</th>\n\t\t\t\t\t\t  <td>Jacob</td>\n\t\t\t\t\t\t  <td>Thornton</td>\n\t\t\t\t\t\t  <td>@fat</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t  <th scope=\"row\">3</th>\n\t\t\t\t\t\t  <td>Larry</td>\n\t\t\t\t\t\t  <td>the Bird</td>\n\t\t\t\t\t\t  <td>@twitter</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t  </tbody>\n\t\t\t\t</table>\n\t\t\t</Fragment>\n\t\t\t\n\t\t);\n\t}\n}*/","map":{"version":3,"sources":["C:/Users/JohnP/myfirstreact/src/App.js"],"names":["React","Component","Fragment","useState","useEffect","axios","BootstrapTable","paginationFactory","ReactBootStrap","filterFactory","textFilter","App","drugs","setDrugs","loading","setLoading","getDrugData","data","get","console","log","bioactivities","e","columns","dataField","text","sort","filter","customTotal","from","to","size","options","showTotal","paginationTotalRenderer"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\n\nconst App = () => {\n\tconst [drugs, setDrugs] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst getDrugData = async () => {\n\t\ttry {\n\t\t\tconst data = await axios.get(\n\t\t\t\t\"https://drugtargetcommons.fimm.fi/api/data/bioactivity/?format=json\"\n\t\t\t);\n\t\t\tconsole.log(data);\n\t\t\tsetDrugs(data.data.bioactivities);\n\t\t\tsetLoading(true);\n\t\t} catch (e) {\n\t\t\tconsole.log(e)\n\t\t}\n\t};\n\tconst columns = [\n\t\t{ dataField: \"chembl_id\", text: \"Chembl ID\", sort: true, filter: textFilter()},\n\t\t{ dataField: \"activity_comment\", text: \"Activity Comment\", sort: true },\n\t\t{ dataField: \"annotated\", text: \"Annotated\", sort: true },\n\t\t{ dataField: \"annotation_comments\", text: \"Annotation Comments\", sort: true },\n\t\t{ dataField: \"assay_cell_type\", text: \"Assay Cell Type\", sort: true },\n\t\t{ dataField: \"assay_format\", text: \"Assay Format\", sort: true },\n\t\t{ dataField: \"assay_sub_type\", text: \"Assay Sub-Type\", sort: true },\n\t\t{ dataField: \"assay_type\", text: \"Assay Type\", sort: true },\n\t\t{ dataField: \"authors\", text: \"Authors\", sort: true },\n\t\t{ dataField: \"compound_concentration_value\", text: \"Compount Concetration Value\", sort: true },\n\t\t{ dataField: \"compound_concentration_value_unit\", text: \"Compount Concetration Value Unit\", sort: true },\n\t\t{ dataField: \"compound_name\", text: \"Compound Name\", sort: true },\n\t\t{ dataField: \"detection_technology\", text: \"Detection Technology\", sort: true },\n\t\t{ dataField: \"endpoint_actionmode\", text: \"Endpoint Actionmode\", sort: true },\n\t\t{ dataField: \"endpoint_standard_relation\", text: \"Endpoint Standard Relation\", sort: true }\n\t]\n\t\n\tconst customTotal = (from, to, size) => (\n\t\t<span className=\"react-bootstrap-table-pagination-total\">\n\t\t\tShowing { from } to { to } of { size } Results\n\t\t</span>\n\t);\n\t\n\tconst options = {\n\t\tshowTotal: true,\n\t\tpaginationTotalRenderer: customTotal\n\t};\n\n\tuseEffect(() => {\n\t\tgetDrugData();\n\t}, []);\n\n\treturn (\n\t\t<div className = \"App\">\n\t\t{loading ? (\n\t\t\t<BootstrapTable\n\t\t\t\tkeyField=\"activity_comment\"\n\t\t\t\tdata={drugs}\n\t\t\t\tcolumns={columns}\n\t\t\t\tpagination={paginationFactory(options)}\n\t\t\t\tfilter={ filterFactory() }\n\t\t\t\tresponsive\n\t\t\t/>\n\t\t) : (\n\t\t\t<ReactBootStrap.Spinner animation=\"border\" />\n\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default App;\n\t\n/*export default class App extends React.Component {\n\t\n\tstate = {\n\t\tloading: true,\n\t\tdrug: null\n\t};\n\t\n\tasync componentDidMount() {\n\t\tconst url = \"https://drugtargetcommons.fimm.fi/api/data/bioactivity/?format=json\";\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\tthis.setState({ drug: data.bioactivities[0], loading: false });\n\t\t//console.log(data.bioactivities[0]);\n\t}\n\t\n\trender(){\n\t\tif (this.state.loading) {\n\t\t\treturn <div>loading...</div>; \n\t\t}\n\t\t\n\t\tif (!this.state.drug) {\n\t\t\treturn <div>didnt get a drug</div>;\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div>\n\t\t\t\t\t<div>{this.state.drug.activity_comment}</div>\n\t\t\t\t\t<div>{this.state.drug.annotated}</div>\n\t\t\t\t\t<div>{this.state.drug.annotation_comments}</div>\n\t\t\t\t\t<div>{this.state.drug.assay_cell_type}</div>\n\t\t\t\t\t<div>{this.state.drug.assay_format}</div>\n\t\t\t\t\t<div>{this.state.drug.assay_sub_type}</div>\n\t\t\t\t\t<div>{this.state.drug.assay_type}</div>\n\t\t\t\t\t<div>{this.state.drug.authors}</div>\n\t\t\t\t\t<div>{this.state.drug.chembl_id}</div>\n\t\t\t\t\t<div>{this.state.drug.compound_concentration_value}</div>\n\t\t\t\t\t<div>{this.state.drug.compound_concentration_value_unit}</div>\n\t\t\t\t\t<div>{this.state.drug.compound_name}</div>\n\t\t\t\t\t<div>{this.state.drug.detection_technology}</div>\n\t\t\t\t\t<div>{this.state.drug.endpoint_actionmode}</div>\n\t\t\t\t\t<div>{this.state.drug.endpoint_standard_relation}</div>\n\t\t\t\t\t<div>{this.state.drug.endpoint_standard_type}</div>\n\t\t\t\t\t<div>{this.state.drug.endpoint_standard_units}</div>\n\t\t\t\t\t<div>{this.state.drug.endpoint_standard_value}</div>\n\t\t\t\t\t<div>{this.state.drug.gene_name}</div>\n\t\t\t\t\t<div>{this.state.drug.inhibitor_type}</div>\n\t\t\t\t\t<div>{this.state.drug.max_phase}</div>\n\t\t\t\t\t<div>{this.state.drug.mutation_info}</div>\n\t\t\t\t\t<div>{this.state.drug.protein_class}</div>\n\t\t\t\t\t<div>{this.state.drug.pubmed_id}</div>\n\t\t\t\t\t<div>{this.state.drug.resource_uri}</div>\n\t\t\t\t\t<div>{this.state.drug.target_organism}</div>\n\t\t\t\t\t<div>{this.state.drug.target_pref_name}</div>\n\t\t\t\t\t<div>{this.state.drug.uniprot_id}</div>\n\t\t\t\t\t<div>{this.state.drug.wildtype_or_mutant}</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<table class=\"table table-striped table-responsive\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t  <th scope=\"col\">#</th>\n\t\t\t\t\t\t  <th scope=\"col\">Activity Comment</th>\n\t\t\t\t\t\t  <th scope=\"col\">Annotated</th>\n\t\t\t\t\t\t  <th scope=\"col\">Annotation Comments</th>\n\t\t\t\t\t\t  <th scope=\"col\">Assay Cell Type</th>\n\t\t\t\t\t\t  <th scope=\"col\">Assay Format</th>\n\t\t\t\t\t\t  <th scope=\"col\">Assay Sub-Type</th>\n\t\t\t\t\t\t  <th scope=\"col\">Assay Type</th>\n\t\t\t\t\t\t  <th scope=\"col\">Authors</th>\n\t\t\t\t\t\t  <th scope=\"col\">Chembl ID</th>\n\t\t\t\t\t\t  <th scope=\"col\">Compount Concetration Value</th>\n\t\t\t\t\t\t  <th scope=\"col\">Compount Concetration Value Unit</th>\n\t\t\t\t\t\t  <th scope=\"col\">Compound Name</th>\n\t\t\t\t\t\t  <th scope=\"col\">Detection Technology</th>\n\t\t\t\t\t\t  <th scope=\"col\">Endpoint Actionmode</th>\n\t\t\t\t\t\t  <th scope=\"col\">Endpoint Standard Relation</th>\n\t\t\t\t\t\t  <th scope=\"col\">Endpoint Standard Type</th>\n\t\t\t\t\t\t  <th scope=\"col\">Endpoint Standard Units</th>\n\t\t\t\t\t\t  <th scope=\"col\">Endpoint Standard Value</th>\n\t\t\t\t\t\t  <th scope=\"col\">Gene Name</th>\n\t\t\t\t\t\t  <th scope=\"col\">Inhibitor Type</th>\n\t\t\t\t\t\t  <th scope=\"col\">Max Phase</th>\n\t\t\t\t\t\t  <th scope=\"col\">Mutation Info</th>\n\t\t\t\t\t\t  <th scope=\"col\">Protein Class</th>\n\t\t\t\t\t\t  <th scope=\"col\">Pubmed ID</th>\n\t\t\t\t\t\t  <th scope=\"col\">Recource URI</th>\n\t\t\t\t\t\t  <th scope=\"col\">Target Organism</th>\n\t\t\t\t\t\t  <th scope=\"col\">Target Pref Name</th>\n\t\t\t\t\t\t  <th scope=\"col\">Uniprot ID</th>\n\t\t\t\t\t\t  <th scope=\"col\">Wildtype or Mutant</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t  <th scope=\"row\">1</th>\n\t\t\t\t\t\t  <td>Mark</td>\n\t\t\t\t\t\t  <td>Otto</td>\n\t\t\t\t\t\t  <td>@mdo</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t  <th scope=\"row\">2</th>\n\t\t\t\t\t\t  <td>Jacob</td>\n\t\t\t\t\t\t  <td>Thornton</td>\n\t\t\t\t\t\t  <td>@fat</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t  <th scope=\"row\">3</th>\n\t\t\t\t\t\t  <td>Larry</td>\n\t\t\t\t\t\t  <td>the Bird</td>\n\t\t\t\t\t\t  <td>@twitter</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t  </tbody>\n\t\t\t\t</table>\n\t\t\t</Fragment>\n\t\t\t\n\t\t);\n\t}\n}*/\n"]},"metadata":{},"sourceType":"module"}